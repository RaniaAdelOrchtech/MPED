// <auto-generated />
using System;
using MPMAR.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MPMAR.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DFRegionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isTotal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DFRegionId");

                    b.ToTable("DFGovernorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFRegion");
                });

            modelBuilder.Entity("MPMAR.Data.ApprovalNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChangeAction")
                        .HasColumnType("int");

                    b.Property<int>("ChangeType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangesDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContentManagerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageType")
                        .HasColumnType("int");

                    b.Property<int>("RelatedPageEnum")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedVersionId")
                        .HasColumnType("int");

                    b.Property<int>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContentManagerId");

                    b.ToTable("ApprovalNotifications");
                });

            modelBuilder.Entity("MPMAR.Data.BEUsersPrivileges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CanAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<int>("PageTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PageRouteId");

                    b.ToTable("BEUsersPrivileges");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAlexandria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArAswan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArAsyut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArBeheira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArBeniSuef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArCairo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDakahlia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDamietta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArFaiyum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArGharbia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArGiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArIsmailia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArKafrElSheikh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArLuxor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMatruh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMinya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMonufia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArNewValley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArNorthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPortSaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArQalyubia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArQena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArRedSea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSharqia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSohag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSouthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSuez")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnAlexandria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAswan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAsyut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnBeheira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnBeniSuef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnCairo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDakahlia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDamietta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnFaiyum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnGharbia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnGiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnIsmailia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnKafrElSheikh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnLuxor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMatruh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMinya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMonufia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnNewValley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnNorthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPortSaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnQalyubia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnQena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnRedSea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSharqia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSohag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSouthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSuez")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CityPlan");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAlexandria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArAswan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArAsyut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArBeheira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArBeniSuef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArCairo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDakahlia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDamietta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArFaiyum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArGharbia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArGiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArIsmailia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArKafrElSheikh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArLuxor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMatruh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMinya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMonufia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArNewValley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArNorthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPortSaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArQalyubia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArQena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArRedSea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSharqia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSohag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSouthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArSuez")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int?>("CityPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnAlexandria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAswan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAsyut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnBeheira")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnBeniSuef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnCairo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDakahlia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDamietta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnFaiyum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnGharbia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnGiza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnIsmailia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnKafrElSheikh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnLuxor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMatruh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMinya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMonufia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnNewValley")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnNorthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPortSaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnQalyubia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnQena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnRedSea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSharqia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSohag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSouthSinai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSuez")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CityPlanId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CityPlanVersions");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DFGovId")
                        .HasColumnType("int");

                    b.Property<string>("EnFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMapActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CityPlanId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DFGovId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CityPlanYear");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanYearVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int>("CityPlanVersionId")
                        .HasColumnType("int");

                    b.Property<int?>("CityPlanYearId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DFGovId")
                        .HasColumnType("int");

                    b.Property<string>("EnFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GovYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMapActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CityPlanVersionId");

                    b.HasIndex("CityPlanYearId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DFGovId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CityPlanYearVersions");
                });

            modelBuilder.Entity("MPMAR.Data.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("MPMAR.Data.DFGov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFGovs");
                });

            modelBuilder.Entity("MPMAR.Data.EconomicIndicators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageDiscriptionAr1")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionAr2")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionAr3")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn1")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn2")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn3")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageTitleAr1")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleAr2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleAr3")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn1")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn3")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainDiscriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("MainDiscriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EconomicIndicators");
                });

            modelBuilder.Entity("MPMAR.Data.EconomicIndicatorsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EconomicIndicatorsId")
                        .HasColumnType("int");

                    b.Property<string>("ImageDiscriptionAr1")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionAr2")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionAr3")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn1")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn2")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageDiscriptionEn3")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ImageTitleAr1")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleAr2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleAr3")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn1")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn2")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageTitleEn3")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ImageUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainDiscriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("MainDiscriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EconomicIndicatorsId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EconomicIndicatorsVersion");
                });

            modelBuilder.Entity("MPMAR.Data.EgyptVision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArEgyptVisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArEgyptVisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArEgyptVisionSmallDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BgColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnEgyptVisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEgyptVisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEgyptVisionSmallDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImagePositionIsRight")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LineColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EgyptVision");
                });

            modelBuilder.Entity("MPMAR.Data.EgyptVisionVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArEgyptVisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArEgyptVisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArEgyptVisionSmallDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BgColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EgyptVisionId")
                        .HasColumnType("int");

                    b.Property<string>("EnEgyptVisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEgyptVisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEgyptVisionSmallDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImagePositionIsRight")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LineColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EgyptVisionId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EgyptVisionVersions");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArColumnPostion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnColumnPostion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FooterMenuTitleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FooterMenuTitleVersionsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FooterMenuTitleId");

                    b.HasIndex("FooterMenuTitleVersionsId");

                    b.ToTable("FooterMenuItem");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuItemVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArColumnPostion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnColumnPostion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FooterMenuItemId")
                        .HasColumnType("int");

                    b.Property<int?>("FooterMenuTitleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FooterMenuItemId");

                    b.HasIndex("FooterMenuTitleId");

                    b.ToTable("FooterMenuItemVersions");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("FooterMenuTitles");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuTitleVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FooterMenuTitleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FooterMenuTitleId");

                    b.ToTable("FooterMenuTitleVersions");
                });

            modelBuilder.Entity("MPMAR.Data.FormerMinistriesPageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Title1Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title1En")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title2Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title2En")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FormerMinistriesPageInfos");
                });

            modelBuilder.Entity("MPMAR.Data.FormerMinistriesPageInfoVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<int?>("FormerMinistriesPageInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Title1Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title1En")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title2Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title2En")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FormerMinistriesPageInfoId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("FormerMinistriesPageInfoVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.CitizenPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("EnImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CitizenPlan");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.CitizenPlanVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int?>("CitizenPlanId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("EnImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CitizenPlanId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CitizenPlanVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.EconomicDevelopment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription3")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArTitle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ArTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ArTitle3")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription3")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnTitle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EnTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EnTitle3")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EconomicDevelopments");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.EconomicDevelopmentVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription3")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArTitle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ArTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ArTitle3")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EconomicDevelopmentId")
                        .HasColumnType("int");

                    b.Property<string>("EnDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription3")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnTitle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EnTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EnTitle3")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EconomicDevelopmentId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EconomicDevelopmentVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageAffiliates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePageAffiliates");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageAffiliatesVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePageAffiliatesId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HomePageAffiliatesId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePageAffiliatesVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageBasicInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FavIconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePageBasicInfo");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageLogoLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePageLogoLinks");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageLogoLinkVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePageLogoLinkId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HomePageLogoLinkId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePageLogoLinkVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("homePagePhotos");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhotoSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("homePagePhotoSlider");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhotoSliderVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePagePhotoSliderId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HomePagePhotoSliderId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePagePhotoSliderVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhotoVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HomePagePhotoId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HomePagePhotoId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePagePhotoVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("homePageVideos");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageVideoVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HomePageVideoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("HomePageVideoId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("HomePageVideoVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MinistryVission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ArTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("EnTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("MinistryVissions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MinistryVissionVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ArTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("EnTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinistryVissionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("MinistryVissionId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("MinistryVissionVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.Monitoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Monitoring");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MonitoringVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("BackGroundImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription1")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnDescription2")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnTitle2")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("MonitoringId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("MonitoringId");

                    b.ToTable("MonitoringVersions");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArDescription2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArDescription3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnDescription2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnDescription3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.PublicationVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArDescription2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArDescription3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ArMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ArTitle3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription1")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnDescription2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnDescription3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EnMainTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnTitle3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Image1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("PublicationId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PublicationId");

                    b.ToTable("PublicationVersions");
                });

            modelBuilder.Entity("MPMAR.Data.LeftMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeftMenuType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.ToTable("LeftMenuItem");
                });

            modelBuilder.Entity("MPMAR.Data.LeftMenuItemVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LeftMenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("LeftMenuType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LeftMenuItemId");

                    b.ToTable("LeftMenuItemVersions");
                });

            modelBuilder.Entity("MPMAR.Data.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Application")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MPMAR.Data.MinistryTimeLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventSocialLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormerMinistriesPageInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PeriodAr")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PeriodEn")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FormerMinistriesPageInfoId");

                    b.HasIndex("StatusId");

                    b.ToTable("MinistryTimeLine");
                });

            modelBuilder.Entity("MPMAR.Data.MinistryTimeLineVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventSocialLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormerMinistriesPageInfoVersionsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MinistryTimeLineId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PeriodAr")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PeriodEn")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("FormerMinistriesPageInfoVersionsId");

                    b.HasIndex("MinistryTimeLineId");

                    b.HasIndex("StatusId");

                    b.ToTable("MinistryTimeLineVersions");
                });

            modelBuilder.Entity("MPMAR.Data.NavItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ParentNavItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParentNavItemId");

                    b.ToTable("NavItems");
                });

            modelBuilder.Entity("MPMAR.Data.NavItemVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("NavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ParentNavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NavItemId");

                    b.HasIndex("ParentNavItemId");

                    b.HasIndex("StatusId");

                    b.ToTable("NavItemVersions");
                });

            modelBuilder.Entity("MPMAR.Data.NewsTypesForNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NewsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PageNewsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsTypeId");

                    b.HasIndex("PageNewsId");

                    b.ToTable("NewsTypesForNews");
                });

            modelBuilder.Entity("MPMAR.Data.NewsTypesForNewsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NewsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PageNewsVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsTypeId");

                    b.HasIndex("PageNewsVersionId");

                    b.ToTable("NewsTypesForNewsVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMapTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArParticipateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailParticipateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMapTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnParticipateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FormParticipateActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MapUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageRouteVersionId");

                    b.ToTable("PageContact");
                });

            modelBuilder.Entity("MPMAR.Data.PageContactVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArMapTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArParticipateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailParticipateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnMapTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnParticipateTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FormParticipateActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MapUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageContactId")
                        .HasColumnType("int");

                    b.Property<int?>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageContactId");

                    b.HasIndex("PageRouteVersionId");

                    b.ToTable("PageContactVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDateColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EventLat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventLocationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EventLon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventSocialLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageRouteId");

                    b.ToTable("PageEvents");
                });

            modelBuilder.Entity("MPMAR.Data.PageEventVersions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDateColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EventLat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventLocationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EventLon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventSocialLinks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageEventId")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageEventId");

                    b.HasIndex("PageRouteVersionId");

                    b.ToTable("PageEventVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageMinistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDobulQuote")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeading")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSection")
                        .HasColumnType("bit");

                    b.Property<int?>("NavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageRouteId");

                    b.ToTable("PageMinistry");
                });

            modelBuilder.Entity("MPMAR.Data.PageMinistryVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDobulQuote")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeading")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSection")
                        .HasColumnType("bit");

                    b.Property<int?>("NavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageMinistryId")
                        .HasColumnType("int");

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageMinistryId");

                    b.HasIndex("PageRouteId");

                    b.ToTable("PageMinistryVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageRouteId");

                    b.ToTable("PageNews");
                });

            modelBuilder.Entity("MPMAR.Data.PageNewsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PageNewsType");
                });

            modelBuilder.Entity("MPMAR.Data.PageNewsVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PageNewsId")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageNewsId");

                    b.HasIndex("PageRouteVersionId");

                    b.ToTable("PageNewsVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HasNavItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDynamicPage")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("NavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PageFilePathAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageFilePathEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("NavItemId");

                    b.ToTable("PageRoutes");
                });

            modelBuilder.Entity("MPMAR.Data.PageRouteVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int?>("ContentVersionStatusEnum")
                        .HasColumnType("int");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasNavItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDynamicPage")
                        .HasColumnType("bit");

                    b.Property<int?>("NavItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PageFilePathAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageFilePathEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("PageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NavItemId");

                    b.HasIndex("PageRouteId");

                    b.HasIndex("StatusId");

                    b.ToTable("PageRouteVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<int>("PageSectionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PageSectionVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageRouteId");

                    b.HasIndex("PageSectionTypeId");

                    b.ToTable("PageSections");
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PageSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageSectionId");

                    b.ToTable("PageSectionCards");
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionCardVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PageSectionCardId")
                        .HasColumnType("int");

                    b.Property<int>("PageSectionVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageSectionCardId");

                    b.HasIndex("PageSectionVersionId");

                    b.ToTable("PageSectionCardVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCards")
                        .HasColumnType("bit");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThemeImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageSectionTypes");
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<int?>("PageSectionId")
                        .HasColumnType("int");

                    b.Property<int>("PageSectionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageRouteVersionId");

                    b.HasIndex("PageSectionId")
                        .IsUnique()
                        .HasFilter("[PageSectionId] IS NOT NULL");

                    b.HasIndex("PageSectionTypeId");

                    b.ToTable("PageSectionVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PhotoArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArPhotoArchiveDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotoArchiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotoArchiveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnPhotoArchiveDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotoArchiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotoArchiveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PageRouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PageRouteId");

                    b.ToTable("PhotoArchive");
                });

            modelBuilder.Entity("MPMAR.Data.PhotoArchiveVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArPhotoArchiveDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotoArchiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotoArchiveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnPhotoArchiveDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotoArchiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotoArchiveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PageRouteVersionId")
                        .HasColumnType("int");

                    b.Property<int?>("PhotoArchiveId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PageRouteVersionId");

                    b.HasIndex("PhotoArchiveId");

                    b.ToTable("PhotoArchiveVersions");
                });

            modelBuilder.Entity("MPMAR.Data.PhotosAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArPhotosAlbumDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotosAlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnPhotosAlbumDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotosAlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PhotoArchiveId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PhotoArchiveId");

                    b.ToTable("PhotosAlbum");
                });

            modelBuilder.Entity("MPMAR.Data.PhotosAlbumVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArPhotosAlbumDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArPhotosAlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnPhotosAlbumDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhotosAlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PhotoArchiveVersionId")
                        .HasColumnType("int");

                    b.Property<int?>("PhotosAlbumId")
                        .HasColumnType("int");

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PhotoArchiveVersionId");

                    b.HasIndex("PhotosAlbumId");

                    b.ToTable("PhotosAlbumVersions");
                });

            modelBuilder.Entity("MPMAR.Data.SiteMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("ArContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("SeoDescriptionAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoOgTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeoTwitterCardEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("SiteMap");
                });

            modelBuilder.Entity("MPMAR.Data.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SocialMediaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("MPMAR.Data.SocialMediaVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int?>("Order")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SocialMediaId")
                        .HasColumnType("int");

                    b.Property<string>("SocialMediaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SocialMediaId");

                    b.ToTable("SocialMediaVersions");
                });

            modelBuilder.Entity("MPMAR.Data.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MPMAR.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("isFirstLogin")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFRegion", "DFRegion")
                        .WithMany("DFGovernorates")
                        .HasForeignKey("DFRegionId");
                });

            modelBuilder.Entity("MPMAR.Data.ApprovalNotification", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ContentManager")
                        .WithMany()
                        .HasForeignKey("ContentManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.BEUsersPrivileges", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApplicationUser")
                        .WithMany("BEUsersPrivileges")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("BEUsersPrivileges")
                        .HasForeignKey("PageRouteId");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlan", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.CityPlan", "CityPlan")
                        .WithMany()
                        .HasForeignKey("CityPlanId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanYear", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.CityPlan", "CityPlan")
                        .WithMany()
                        .HasForeignKey("CityPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.DFGov", "DFGov")
                        .WithMany()
                        .HasForeignKey("DFGovId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.CityPlanYearVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.CityPlanVersion", "CityPlanVersion")
                        .WithMany()
                        .HasForeignKey("CityPlanVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.CityPlanYear", "CityPlanYear")
                        .WithMany()
                        .HasForeignKey("CityPlanYearId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.DFGov", "DFGov")
                        .WithMany()
                        .HasForeignKey("DFGovId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.EconomicIndicators", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.EconomicIndicatorsVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.EconomicIndicators", "EconomicIndicators")
                        .WithMany()
                        .HasForeignKey("EconomicIndicatorsId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.EgyptVision", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.EgyptVisionVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.EgyptVision", "EgyptVision")
                        .WithMany()
                        .HasForeignKey("EgyptVisionId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuItem", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FooterMenuTitle", "FooterMenuTitle")
                        .WithMany("FooterMenuItems")
                        .HasForeignKey("FooterMenuTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.FooterMenuTitleVersions", null)
                        .WithMany("FooterMenuItems")
                        .HasForeignKey("FooterMenuTitleVersionsId");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuItemVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FooterMenuItem", "FooterMenuItem")
                        .WithMany()
                        .HasForeignKey("FooterMenuItemId");

                    b.HasOne("MPMAR.Data.FooterMenuTitle", "FooterMenuTitle")
                        .WithMany()
                        .HasForeignKey("FooterMenuTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuTitle", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");
                });

            modelBuilder.Entity("MPMAR.Data.FooterMenuTitleVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FooterMenuTitle", "FooterMenuTitle")
                        .WithMany()
                        .HasForeignKey("FooterMenuTitleId");
                });

            modelBuilder.Entity("MPMAR.Data.FormerMinistriesPageInfo", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.FormerMinistriesPageInfoVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FormerMinistriesPageInfo", "FormerMinistriesPageInfo")
                        .WithMany()
                        .HasForeignKey("FormerMinistriesPageInfoId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.CitizenPlan", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.CitizenPlanVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.HomePageModels.CitizenPlan", "CitizenPlan")
                        .WithMany()
                        .HasForeignKey("CitizenPlanId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.EconomicDevelopment", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.EconomicDevelopmentVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.EconomicDevelopment", "EconomicDevelopment")
                        .WithMany()
                        .HasForeignKey("EconomicDevelopmentId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageAffiliatesVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.HomePageAffiliates", "HomePageAffiliates")
                        .WithMany()
                        .HasForeignKey("HomePageAffiliatesId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageBasicInfo", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageLogoLink", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageLogoLinkVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.HomePageLogoLink", "HomePageLogoLink")
                        .WithMany()
                        .HasForeignKey("HomePageLogoLinkId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhoto", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhotoSliderVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.HomePagePhotoSlider", "HomePagePhotoSlider")
                        .WithMany()
                        .HasForeignKey("HomePagePhotoSliderId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePagePhotoVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.HomePagePhoto", "HomePagePhoto")
                        .WithMany()
                        .HasForeignKey("HomePagePhotoId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageVideo", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.HomePageVideoVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.HomePageVideo", "HomePageVideo")
                        .WithMany()
                        .HasForeignKey("HomePageVideoId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MinistryVission", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MinistryVissionVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.HomePageModels.MinistryVission", "MinistryVission")
                        .WithMany()
                        .HasForeignKey("MinistryVissionId");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.Monitoring", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.MonitoringVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.HomePageModels.Monitoring", "Monitoring")
                        .WithMany()
                        .HasForeignKey("MonitoringId");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.Publication", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.HomePageModels.PublicationVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.HomePageModels.Publication", "Publication")
                        .WithMany()
                        .HasForeignKey("PublicationId");
                });

            modelBuilder.Entity("MPMAR.Data.LeftMenuItem", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");
                });

            modelBuilder.Entity("MPMAR.Data.LeftMenuItemVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.LeftMenuItem", "LeftMenuItem")
                        .WithMany()
                        .HasForeignKey("LeftMenuItemId");
                });

            modelBuilder.Entity("MPMAR.Data.MinistryTimeLine", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FormerMinistriesPageInfo", "FormerMinistriesPageInfo")
                        .WithMany("MinistryTimeLines")
                        .HasForeignKey("FormerMinistriesPageInfoId");

                    b.HasOne("MPMAR.Data.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.MinistryTimeLineVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.FormerMinistriesPageInfoVersions", "FormerMinistriesPageInfoVersions")
                        .WithMany("MinistryTimeLineVersions")
                        .HasForeignKey("FormerMinistriesPageInfoVersionsId");

                    b.HasOne("MPMAR.Data.MinistryTimeLine", "MinistryTimeLine")
                        .WithMany()
                        .HasForeignKey("MinistryTimeLineId");

                    b.HasOne("MPMAR.Data.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.NavItem", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedNavItems")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedNavItems")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany("ModifiedNavItems")
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.NavItem", "ParentNavItem")
                        .WithMany("NavItemList")
                        .HasForeignKey("ParentNavItemId");
                });

            modelBuilder.Entity("MPMAR.Data.NavItemVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedNavItemVersions")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedNavItemVersions")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.NavItem", "NavItem")
                        .WithMany()
                        .HasForeignKey("NavItemId");

                    b.HasOne("MPMAR.Data.NavItem", "ParentNavItem")
                        .WithMany()
                        .HasForeignKey("ParentNavItemId");

                    b.HasOne("MPMAR.Data.Status", "Status")
                        .WithMany("NavItemVersions")
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("MPMAR.Data.NewsTypesForNews", b =>
                {
                    b.HasOne("MPMAR.Data.PageNewsType", "NewsType")
                        .WithMany()
                        .HasForeignKey("NewsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PageNews", null)
                        .WithMany("NewsTypesForNews")
                        .HasForeignKey("PageNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.NewsTypesForNewsVersion", b =>
                {
                    b.HasOne("MPMAR.Data.PageNewsType", "NewsType")
                        .WithMany()
                        .HasForeignKey("NewsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PageNewsVersion", "PageNewsVersion")
                        .WithMany("NewsTypesForNewsVersions")
                        .HasForeignKey("PageNewsVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageContact", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersions")
                        .WithMany()
                        .HasForeignKey("PageRouteVersionId");
                });

            modelBuilder.Entity("MPMAR.Data.PageContactVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageContact", "PageContact")
                        .WithMany()
                        .HasForeignKey("PageContactId");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersions")
                        .WithMany()
                        .HasForeignKey("PageRouteVersionId");
                });

            modelBuilder.Entity("MPMAR.Data.PageEvent", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany()
                        .HasForeignKey("PageRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageEventVersions", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageEvent", "PageEvent")
                        .WithMany("PageEventVersions")
                        .HasForeignKey("PageEventId");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersion")
                        .WithMany("PageEventVersions")
                        .HasForeignKey("PageRouteVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageMinistry", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("PageMinistry")
                        .HasForeignKey("PageRouteId");
                });

            modelBuilder.Entity("MPMAR.Data.PageMinistryVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageMinistry", "PageMinistry")
                        .WithMany("PageMinistryVersions")
                        .HasForeignKey("PageMinistryId");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("PageMinistryVersions")
                        .HasForeignKey("PageRouteId");
                });

            modelBuilder.Entity("MPMAR.Data.PageNews", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("PageNews")
                        .HasForeignKey("PageRouteId");
                });

            modelBuilder.Entity("MPMAR.Data.PageNewsVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageNews", "PageNews")
                        .WithMany("PageNewsVersions")
                        .HasForeignKey("PageNewsId");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersion")
                        .WithMany("PageNewsVersions")
                        .HasForeignKey("PageRouteVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageRoute", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedPageRoutes")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedPageRoutes")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany("ModifiedPageRoutes")
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.NavItem", "NavItem")
                        .WithMany("PageRoutes")
                        .HasForeignKey("NavItemId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("MPMAR.Data.PageRouteVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedPageRouteVersions")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedPageRouteVersions")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.NavItem", "NavItem")
                        .WithMany("PageRoutesList")
                        .HasForeignKey("NavItemId");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("PageRouteVersions")
                        .HasForeignKey("PageRouteId");

                    b.HasOne("MPMAR.Data.Status", "Status")
                        .WithMany("PageRouteVersions")
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("MPMAR.Data.PageSection", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedPageSections")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedPageSections")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany("ModifiedPageSections")
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany("PageSections")
                        .HasForeignKey("PageRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PageSectionType", "PageSectionType")
                        .WithMany("PageSections")
                        .HasForeignKey("PageSectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionCard", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageSection", "PageSection")
                        .WithMany("PageSectionCards")
                        .HasForeignKey("PageSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionCardVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageSectionCard", "PageSectionCard")
                        .WithMany()
                        .HasForeignKey("PageSectionCardId");

                    b.HasOne("MPMAR.Data.PageSectionVersion", "PageSectionVersion")
                        .WithMany("PageSectionCardVersions")
                        .HasForeignKey("PageSectionVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PageSectionVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany("ApprovedPageSectionVersions")
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany("CreatedPageSectionVersions")
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersion")
                        .WithMany("PageSectionVersions")
                        .HasForeignKey("PageRouteVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PageSection", "PageSection")
                        .WithOne("PageSectionVersion")
                        .HasForeignKey("MPMAR.Data.PageSectionVersion", "PageSectionId");

                    b.HasOne("MPMAR.Data.PageSectionType", "PageSectionType")
                        .WithMany("PageSectionVersions")
                        .HasForeignKey("PageSectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PhotoArchive", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PageRoute", "PageRoute")
                        .WithMany()
                        .HasForeignKey("PageRouteId");
                });

            modelBuilder.Entity("MPMAR.Data.PhotoArchiveVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PageRouteVersion", "PageRouteVersion")
                        .WithMany()
                        .HasForeignKey("PageRouteVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PhotoArchive", "PhotoArchive")
                        .WithMany("PhotoArchiveVersions")
                        .HasForeignKey("PhotoArchiveId");
                });

            modelBuilder.Entity("MPMAR.Data.PhotosAlbum", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.PhotoArchive", "PhotoArchive")
                        .WithMany("PhotosAlbums")
                        .HasForeignKey("PhotoArchiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Data.PhotosAlbumVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.PhotoArchiveVersion", "PhotoArchiveVersion")
                        .WithMany("PhotosAlbumVersions")
                        .HasForeignKey("PhotoArchiveVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Data.PhotosAlbum", "PhotosAlbum")
                        .WithMany("PhotosAlbumVersions")
                        .HasForeignKey("PhotosAlbumId");
                });

            modelBuilder.Entity("MPMAR.Data.SiteMap", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.SocialMedia", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("MPMAR.Data.SocialMediaVersion", b =>
                {
                    b.HasOne("MPMAR.Data.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("MPMAR.Data.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");

                    b.HasOne("MPMAR.Data.SocialMedia", "SocialMedia")
                        .WithMany()
                        .HasForeignKey("SocialMediaId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
