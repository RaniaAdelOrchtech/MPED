// <auto-generated />
using System;
using MPMAR.Analytics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MPMAR.Analytics.Data.Migrations
{
    [DbContext(typeof(AnalyticsDbContext))]
    [Migration("20200902102617_addComponentCurrentVersion")]
    partial class addComponentCurrentVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MPMAR.Analytics.Data.ActivityConstant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationAndFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("AgricultureForestryFishing")
                        .HasColumnType("float");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("Communication")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSectorId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediariesAuxiliaryServices")
                        .HasColumnType("float");

                    b.Property<double?>("Gas")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("Information")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("ManufacturingIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("MiningQuarrying")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtraction")
                        .HasColumnType("float");

                    b.Property<double?>("OtherManufacturing")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<double?>("Petroleum")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateOwnership")
                        .HasColumnType("float");

                    b.Property<double?>("SocialSecurityAndInsurance")
                        .HasColumnType("float");

                    b.Property<double?>("SocialServices")
                        .HasColumnType("float");

                    b.Property<double?>("SuezcCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPAtFactorCost")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationAndStorage")
                        .HasColumnType("float");

                    b.Property<double?>("WaterSewerageRemediationActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleAndRetailTrade")
                        .HasColumnType("float");

                    b.Property<double?>("petroleumRefining")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSectorId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearId");

                    b.ToTable("ActivityConstants");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ActivityCurrent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationAndFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("AgricultureForestryFishing")
                        .HasColumnType("float");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("Communication")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSectorId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediariesAuxiliaryServices")
                        .HasColumnType("float");

                    b.Property<double?>("Gas")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("Information")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("ManufacturingIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("MiningQuarrying")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtraction")
                        .HasColumnType("float");

                    b.Property<double?>("OtherManufacturing")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<double?>("Petroleum")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateOwnership")
                        .HasColumnType("float");

                    b.Property<double?>("SocialSecurityAndInsurance")
                        .HasColumnType("float");

                    b.Property<double?>("SocialServices")
                        .HasColumnType("float");

                    b.Property<double?>("SuezcCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPAtFactorCost")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationAndStorage")
                        .HasColumnType("float");

                    b.Property<double?>("WaterSewerageRemediationActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleAndRetailTrade")
                        .HasColumnType("float");

                    b.Property<double?>("petroleumRefining")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSectorId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearId");

                    b.ToTable("ActivityCurrents");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentConstant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearFiscalId")
                        .HasColumnType("int");

                    b.Property<double?>("ExportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<double?>("GovernmentConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("GrossCapitalFormation")
                        .HasColumnType("float");

                    b.Property<double?>("ImportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("PrivateConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGrossDomesticProductAtMarketPrices")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearFiscalId");

                    b.ToTable("ComponentConstants");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentCurrent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearFiscalId")
                        .HasColumnType("int");

                    b.Property<double?>("ExportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<double?>("GovernmentConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("GrossCapitalFormation")
                        .HasColumnType("float");

                    b.Property<double?>("ImportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("PrivateConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGrossDomesticProductAtMarketPrices")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearFiscalId");

                    b.ToTable("ComponentCurrents");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentCurrentVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentCurrentId")
                        .HasColumnType("int");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearFiscalId")
                        .HasColumnType("int");

                    b.Property<double?>("ExportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<double?>("GovernmentConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("GrossCapitalFormation")
                        .HasColumnType("float");

                    b.Property<double?>("ImportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("PrivateConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGrossDomesticProductAtMarketPrices")
                        .HasColumnType("float");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentCurrentId");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearFiscalId");

                    b.ToTable("ComponentCurrentVersions");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGDP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DFGDPId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBasic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DFGDPId");

                    b.ToTable("DFGDP");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DFRegionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isTotal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DFRegionId");

                    b.ToTable("DFGovernorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFIndicators");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFQuarter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFQuarters");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFRegions");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DFSectors");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFSources");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DFUnits");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DFYears");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationandFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("Agriculture")
                        .HasColumnType("float");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("Communication")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<double?>("CrudePetroleumExtraction")
                        .HasColumnType("float");

                    b.Property<double?>("CustomFees")
                        .HasColumnType("float");

                    b.Property<int>("DFGovernorateId")
                        .HasColumnType("int");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("DomesticWorkers")
                        .HasColumnType("float");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("ElectricityandGas")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialCorporations")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("Information")
                        .HasColumnType("float");

                    b.Property<double?>("ManufacturingIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("NonFinancialCorporations")
                        .HasColumnType("float");

                    b.Property<double?>("NonProfitInstitutionsServingHouseholdSector")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtractions")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<double?>("PetroleumRefinement")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateOwnership")
                        .HasColumnType("float");

                    b.Property<double?>("Sewerage")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPEgyptWithCustomFees")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGovernorateGDP")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationandStorage")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WasteRecycling")
                        .HasColumnType("float");

                    b.Property<double?>("Water")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleandRetailTrade")
                        .HasColumnType("float");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DFGovernorateId");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFYearId");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.GrossDomesticActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationAndFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("AgricultureForestryFishing")
                        .HasColumnType("float");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("Communication")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediariesAuxiliaryServices")
                        .HasColumnType("float");

                    b.Property<double?>("Gas")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Information")
                        .HasColumnType("float");

                    b.Property<double?>("ManufacturingIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("MiningQuarrying")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtraction")
                        .HasColumnType("float");

                    b.Property<double?>("OtherManufacturing")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<double?>("Petroleum")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateOwnership")
                        .HasColumnType("float");

                    b.Property<double?>("RealGrowthRate")
                        .HasColumnType("float");

                    b.Property<string>("RealGrowthRateUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SocialSecurityAndInsurance")
                        .HasColumnType("float");

                    b.Property<double?>("SocialServices")
                        .HasColumnType("float");

                    b.Property<double?>("SuezcCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPAtFactorCost")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPGrowthRateAtFactorCost")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationAndStorage")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WaterSewerageRemediationActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleAndRetailTrade")
                        .HasColumnType("float");

                    b.Property<string>("_Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("_Value")
                        .HasColumnType("float");

                    b.Property<string>("_ValueUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("petroleumRefining")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("GrossDomesticActivity");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.GrossDomesticComponentViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ExportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<string>("FiscalYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GovernmentConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("GrossCapitalFormation")
                        .HasColumnType("float");

                    b.Property<double?>("ImportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PrivateConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("RealGrowthRate")
                        .HasColumnType("float");

                    b.Property<string>("RealGrowthRateUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalGrossDomesticProductAtMarketPrices")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("_Value")
                        .HasColumnType("float");

                    b.Property<string>("_ValueUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GrossDomesticComponentViewModel");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Investments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationAndFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("Agriculture")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediaryInsuranceAndSocialSecurity")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("InformationAndCommunication")
                        .HasColumnType("float");

                    b.Property<double?>("NaturalGas")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtractions")
                        .HasColumnType("float");

                    b.Property<double?>("OtherManufacturing")
                        .HasColumnType("float");

                    b.Property<double?>("OtherSrvices")
                        .HasColumnType("float");

                    b.Property<double?>("Petroleum")
                        .HasColumnType("float");

                    b.Property<double?>("PetroleumRefining")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateActivities")
                        .HasColumnType("float");

                    b.Property<double?>("StorageAndTransportation")
                        .HasColumnType("float");

                    b.Property<double?>("SuezCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalInvestments")
                        .HasColumnType("float");

                    b.Property<double?>("WaterAndSewerage")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleAndRetailTrade")
                        .HasColumnType("float");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.LocalizedColumnName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalizedColumnNames");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Models.ComponentConstantVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChangeActionEnum")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentConstantId")
                        .HasColumnType("int");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearFiscalId")
                        .HasColumnType("int");

                    b.Property<double?>("ExportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<double?>("GovernmentConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("GrossCapitalFormation")
                        .HasColumnType("float");

                    b.Property<double?>("ImportsOfGoodsAndServices")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("PrivateConsumption")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGrossDomesticProductAtMarketPrices")
                        .HasColumnType("float");

                    b.Property<int?>("VersionStatusEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentConstantId");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearFiscalId");

                    b.ToTable("ComponentConstantVersions");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.RGDPGrowthRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("GrowthRate")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearId");

                    b.ToTable("RGDPGrowthRates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.RGDPGrowthRate1617", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearFiscalId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearFiscalId");

                    b.ToTable("RGDPGrowthRates1617");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.SectorGrowthRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationAndFoodServiceActivities")
                        .HasColumnType("float");

                    b.Property<double?>("AgricultureForestryFishing")
                        .HasColumnType("float");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("Communication")
                        .HasColumnType("float");

                    b.Property<double?>("Construction")
                        .HasColumnType("float");

                    b.Property<int>("DFIndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("DFQuarterId")
                        .HasColumnType("int");

                    b.Property<int>("DFSectorId")
                        .HasColumnType("int");

                    b.Property<int>("DFSourceId")
                        .HasColumnType("int");

                    b.Property<int>("DFUnitId")
                        .HasColumnType("int");

                    b.Property<int>("DFYearId")
                        .HasColumnType("int");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediariesAuxiliaryServices")
                        .HasColumnType("float");

                    b.Property<double?>("Gas")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("Information")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("ManufacturingIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("MiningQuarrying")
                        .HasColumnType("float");

                    b.Property<double?>("OtherExtraction")
                        .HasColumnType("float");

                    b.Property<double?>("OtherManufacturing")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<double?>("Petroleum")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateOwnership")
                        .HasColumnType("float");

                    b.Property<double?>("SocialSecurityAndInsurance")
                        .HasColumnType("float");

                    b.Property<double?>("SocialServices")
                        .HasColumnType("float");

                    b.Property<double?>("SuezcCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGDPAtFactorCost")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationAndStorage")
                        .HasColumnType("float");

                    b.Property<double?>("WaterSewerageRemediationActivitie")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleAndRetailTrade")
                        .HasColumnType("float");

                    b.Property<double?>("petroleumRefining")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFQuarterId");

                    b.HasIndex("DFSectorId");

                    b.HasIndex("DFSourceId");

                    b.HasIndex("DFUnitId");

                    b.HasIndex("DFYearId");

                    b.ToTable("SectorGrowthRates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.StaticActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AgricultureForestryandFishing")
                        .HasColumnType("float");

                    b.Property<double?>("AnotherExtension")
                        .HasColumnType("float");

                    b.Property<string>("BaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BusinessServices")
                        .HasColumnType("float");

                    b.Property<double?>("CommunicationandInformation")
                        .HasColumnType("float");

                    b.Property<double?>("ConstructionandBuilding")
                        .HasColumnType("float");

                    b.Property<double?>("Education")
                        .HasColumnType("float");

                    b.Property<double?>("EducationandPersonalServices")
                        .HasColumnType("float");

                    b.Property<double?>("Electricity")
                        .HasColumnType("float");

                    b.Property<double?>("Extractions")
                        .HasColumnType("float");

                    b.Property<double?>("ExtractionsOthers")
                        .HasColumnType("float");

                    b.Property<double?>("FinancialIntermediationandAuxiliaryActivities")
                        .HasColumnType("float");

                    b.Property<double?>("Gas")
                        .HasColumnType("float");

                    b.Property<double?>("GeneralGovernment")
                        .HasColumnType("float");

                    b.Property<double?>("Health")
                        .HasColumnType("float");

                    b.Property<double?>("HotelandRestaurants")
                        .HasColumnType("float");

                    b.Property<double?>("Oil")
                        .HasColumnType("float");

                    b.Property<double?>("OtherServices")
                        .HasColumnType("float");

                    b.Property<string>("PerEGMillion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PetroleumRefining")
                        .HasColumnType("float");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RealEstateActivities")
                        .HasColumnType("float");

                    b.Property<double?>("RealEstateProperty")
                        .HasColumnType("float");

                    b.Property<double?>("SocialInsurance")
                        .HasColumnType("float");

                    b.Property<double?>("SuezCanal")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGeneral")
                        .HasColumnType("float");

                    b.Property<double?>("TransformativeIndustries")
                        .HasColumnType("float");

                    b.Property<double?>("TransportationandSaving")
                        .HasColumnType("float");

                    b.Property<double?>("WaterandRecycling")
                        .HasColumnType("float");

                    b.Property<double?>("WholesaleandRetailTrade")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StaticActivities");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ActivityConstant", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSector", "DFSector")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("ActivityConstants")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ActivityCurrent", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSector", "DFSector")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("ActivityCurrents")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentConstant", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("ComponentConstants")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("ComponentConstants")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("ComponentConstants")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("ComponentConstants")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYearFiscal")
                        .WithMany("FiscalComponentConstants")
                        .HasForeignKey("DFYearFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentCurrent", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("ComponentCurrents")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("ComponentCurrents")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("ComponentCurrents")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("ComponentCurrents")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYearFiscal")
                        .WithMany("ComponentCurrents")
                        .HasForeignKey("DFYearFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.ComponentCurrentVersion", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.ComponentCurrent", "ComponentCurrent")
                        .WithMany()
                        .HasForeignKey("ComponentCurrentId");

                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany()
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany()
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany()
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany()
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYearFiscal")
                        .WithMany()
                        .HasForeignKey("DFYearFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGDP", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFGDP", "DFGDp")
                        .WithMany("DFGDPs")
                        .HasForeignKey("DFGDPId");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFRegion", "DFRegion")
                        .WithMany("DFGovernorates")
                        .HasForeignKey("DFRegionId");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Governorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFGovernorate", "DFGovernorate")
                        .WithMany()
                        .HasForeignKey("DFGovernorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany()
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany()
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Investments", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("Investments")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("Investments")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("Investments")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("Investments")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("Investments")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Models.ComponentConstantVersion", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.ComponentConstant", "ComponentConstant")
                        .WithMany()
                        .HasForeignKey("ComponentConstantId");

                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany()
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany()
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany()
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany()
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYearFiscal")
                        .WithMany()
                        .HasForeignKey("DFYearFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.RGDPGrowthRate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("RGDPGrowthRates")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("RGDPGrowthRates")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("RGDPGrowthRates")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("RGDPGrowthRates")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("RGDPGrowthRates")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.RGDPGrowthRate1617", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("RGDPGrowthRates1617")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("RGDPGrowthRates1617")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("RGDPGrowthRates1617")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("RGDPGrowthRates1617")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("RGDPGrowthRates1617")
                        .HasForeignKey("DFYearFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.SectorGrowthRate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFQuarter", "DFQuarter")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFQuarterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSector", "DFSector")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFSource", "DFSource")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFUnit", "DFUnit")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("SectorGrowthRates")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
