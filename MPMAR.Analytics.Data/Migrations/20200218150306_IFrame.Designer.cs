// <auto-generated />
using System;
using MPMAR.Analytics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MPMAR.Analytics.Data.Migrations
{
    [DbContext(typeof(AnalyticsDbContext))]
    [Migration("20200218150306_IFrame")]
    partial class IFrame
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MPMAR.Analytics.Data.Analytic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseYear");

                    b.Property<double>("ExportedGoodsAndServices");

                    b.Property<double>("FamilyConsumption");

                    b.Property<string>("FinancialYear");

                    b.Property<double>("GovernmentConsumption");

                    b.Property<double>("GrossDomesticProductWithMarketPrice");

                    b.Property<double>("GrowthRate");

                    b.Property<double>("ImportedGoodsAndServices");

                    b.Property<string>("Indicator");

                    b.Property<double>("InvestmentAndInventory");

                    b.Property<string>("MeasureUnit");

                    b.Property<string>("Quarter");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.ToTable("Analytics");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DFRegionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.HasIndex("DFRegionId");

                    b.ToTable("DFGovernorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("DFIndicators");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFQuarter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("DFQuarters");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("DFRegions");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("DFSectors");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("DFYears");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.FinalGovernorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("GDPValue");

                    b.Property<string>("Governoratee");

                    b.Property<string>("Indicator");

                    b.Property<string>("Region");

                    b.Property<string>("Sector");

                    b.Property<string>("Unit");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.ToTable("FinalGovernorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.GDPUnderway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ExportedGoodsAndServices");

                    b.Property<double?>("FamilyConsumption");

                    b.Property<string>("FinancialYear");

                    b.Property<double?>("GovernmentConsumption");

                    b.Property<double?>("GrossDomesticProductWithMarketPrice");

                    b.Property<double?>("GrowthRate");

                    b.Property<double?>("ImportedGoodsAndServices");

                    b.Property<string>("Indicator");

                    b.Property<double?>("InvestmentAndInventory");

                    b.Property<string>("MeasureUnit");

                    b.Property<string>("Quarter");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.ToTable("GDPUnderways");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AccommodationandFoodServiceActivities");

                    b.Property<double?>("Agriculture");

                    b.Property<double?>("BusinessServices");

                    b.Property<double?>("Communication");

                    b.Property<double?>("Construction");

                    b.Property<double?>("CrudePetroleumExtraction");

                    b.Property<double?>("CustomFees");

                    b.Property<int>("DFGovernorateId");

                    b.Property<int>("DFIndicatorId");

                    b.Property<int>("DFYearId");

                    b.Property<double?>("DomesticWorkers");

                    b.Property<double?>("Education");

                    b.Property<double?>("ElectricityandGas");

                    b.Property<double?>("FinancialCorporations");

                    b.Property<double?>("GeneralGovernment");

                    b.Property<double?>("Health");

                    b.Property<double?>("Information");

                    b.Property<double?>("ManufacturingIndustries");

                    b.Property<double?>("NonFinancialCorporations");

                    b.Property<double?>("NonProfitInstitutionsServingHouseholdSector");

                    b.Property<double?>("OtherExtractions");

                    b.Property<double?>("OtherServices");

                    b.Property<double?>("PetroleumRefinement");

                    b.Property<double?>("RealEstateOwnership");

                    b.Property<double?>("Sewerage");

                    b.Property<double?>("TotalGDPEgyptWithCustomFees");

                    b.Property<double?>("TotalGovernorateGDP");

                    b.Property<double?>("TransportationandStorage");

                    b.Property<string>("Unit");

                    b.Property<double?>("WasteRecycling");

                    b.Property<double?>("Water");

                    b.Property<double?>("WholesaleandRetailTrade");

                    b.HasKey("Id");

                    b.HasIndex("DFGovernorateId");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFYearId");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.LocalizedColumnName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.Property<string>("NameAr");

                    b.Property<string>("NameEn");

                    b.HasKey("Id");

                    b.ToTable("LocalizedColumnNames");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.MPMARGovernorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Accommodation_and_Food_Service_Activities");

                    b.Property<double?>("Agriculture");

                    b.Property<double?>("Business_Services");

                    b.Property<double?>("Communication");

                    b.Property<double?>("Construction");

                    b.Property<double?>("Crude_Petroleum_Extraction");

                    b.Property<double?>("Custom_Fees");

                    b.Property<int>("DFGovernorateId");

                    b.Property<int>("DFIndicatorId");

                    b.Property<int>("DFRegionId");

                    b.Property<int>("DFYearId");

                    b.Property<double?>("Domestic_Workers");

                    b.Property<double?>("Education");

                    b.Property<double?>("Electricity_and_Gas");

                    b.Property<double?>("Financial_Corporations");

                    b.Property<double?>("General_Government");

                    b.Property<double?>("Health");

                    b.Property<double?>("Information");

                    b.Property<double?>("Manufacturing_Industries");

                    b.Property<double?>("Non_Financial_Corporations");

                    b.Property<double?>("Non_Profit_Institutions_Serving_House_hold_Sector");

                    b.Property<double?>("Other_Extractions");

                    b.Property<double?>("Other_Services");

                    b.Property<double?>("Petroleum_Refinement");

                    b.Property<double?>("Real_Estate_Ownership");

                    b.Property<double?>("Sewerage");

                    b.Property<double?>("Total_GDP_Egypt_With_Custom_Fees");

                    b.Property<double?>("Total_Governorate_GDP");

                    b.Property<double?>("Transportation_and_Storage");

                    b.Property<string>("Unit");

                    b.Property<double?>("Waste_Recycling");

                    b.Property<double?>("Water");

                    b.Property<double?>("Whole_sale_and_Retail_Trade");

                    b.HasKey("Id");

                    b.HasIndex("DFGovernorateId");

                    b.HasIndex("DFIndicatorId");

                    b.HasIndex("DFRegionId");

                    b.HasIndex("DFYearId");

                    b.ToTable("MPMARGovernorates");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.OngoingActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AgricultureForestryandFishing");

                    b.Property<double?>("AnotherExtension");

                    b.Property<double?>("BusinessServices");

                    b.Property<double?>("CommunicationandInformation");

                    b.Property<double?>("ConstructionandBuilding");

                    b.Property<double?>("Education");

                    b.Property<double?>("EducationandPersonalServices");

                    b.Property<double?>("Electricity");

                    b.Property<double?>("Extractions");

                    b.Property<double?>("ExtractionsOthers");

                    b.Property<double?>("FinancialIntermediationandAuxiliaryActivities");

                    b.Property<double?>("Gas");

                    b.Property<double?>("GeneralGovernment");

                    b.Property<double?>("Health");

                    b.Property<double?>("HotelandRestaurants");

                    b.Property<double?>("Oil");

                    b.Property<double?>("OtherServices");

                    b.Property<string>("PerEGMillion");

                    b.Property<double?>("PetroleumRefining");

                    b.Property<string>("Quarter");

                    b.Property<double?>("RealEstateActivities");

                    b.Property<double?>("RealEstateProperty");

                    b.Property<double?>("SocialInsurance");

                    b.Property<double?>("SuezCanal");

                    b.Property<double?>("TotalGeneral");

                    b.Property<double?>("TransformativeIndustries");

                    b.Property<double?>("TransportationandSaving");

                    b.Property<double?>("WaterandRecycling");

                    b.Property<double?>("WholesaleandRetail");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.ToTable("OngoingActivities");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.StaticActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("AgricultureForestryandFishing");

                    b.Property<double?>("AnotherExtension");

                    b.Property<string>("BaseYear");

                    b.Property<double?>("BusinessServices");

                    b.Property<double?>("CommunicationandInformation");

                    b.Property<double?>("ConstructionandBuilding");

                    b.Property<double?>("Education");

                    b.Property<double?>("EducationandPersonalServices");

                    b.Property<double?>("Electricity");

                    b.Property<double?>("Extractions");

                    b.Property<double?>("ExtractionsOthers");

                    b.Property<double?>("FinancialIntermediationandAuxiliaryActivities");

                    b.Property<double?>("Gas");

                    b.Property<double?>("GeneralGovernment");

                    b.Property<double?>("Health");

                    b.Property<double?>("HotelandRestaurants");

                    b.Property<double?>("Oil");

                    b.Property<double?>("OtherServices");

                    b.Property<string>("PerEGMillion");

                    b.Property<double?>("PetroleumRefining");

                    b.Property<string>("Quarter");

                    b.Property<double?>("RealEstateActivities");

                    b.Property<double?>("RealEstateProperty");

                    b.Property<double?>("SocialInsurance");

                    b.Property<double?>("SuezCanal");

                    b.Property<double?>("TotalGeneral");

                    b.Property<double?>("TransformativeIndustries");

                    b.Property<double?>("TransportationandSaving");

                    b.Property<double?>("WaterandRecycling");

                    b.Property<double?>("WholesaleandRetailTrade");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.ToTable("StaticActivities");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.DFGovernorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFRegion", "DFRegion")
                        .WithMany("DFGovernorates")
                        .HasForeignKey("DFRegionId");
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.Governorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFGovernorate", "DFGovernorate")
                        .WithMany()
                        .HasForeignKey("DFGovernorateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany()
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany()
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MPMAR.Analytics.Data.MPMARGovernorate", b =>
                {
                    b.HasOne("MPMAR.Analytics.Data.DFGovernorate", "DFGovernorate")
                        .WithMany("MPMARGovernorates")
                        .HasForeignKey("DFGovernorateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MPMAR.Analytics.Data.DFIndicator", "DFIndicator")
                        .WithMany("MPMARGovernorates")
                        .HasForeignKey("DFIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MPMAR.Analytics.Data.DFRegion", "DFRegion")
                        .WithMany("MPMARGovernorates")
                        .HasForeignKey("DFRegionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MPMAR.Analytics.Data.DFYear", "DFYear")
                        .WithMany("MPMARGovernorates")
                        .HasForeignKey("DFYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
