@model PageMinistryVersion
@using MPMAR.Common
@{
    ViewBag.Title = "Page Ministry";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";


    string approvalId = Context.Request.Query["approvalId"];
    string pageRouteId = Context.Request.Query["pageRouteId"];
    int approvalIdInt = 0;
    int.TryParse(approvalId, out approvalIdInt);

    var bEUsersPrivilegesViewModel = bEUsersPrivilegesService.ValidateIBEUsersPrivilegesViewService(PrivilegesPageType.StaticPage, this.User.FindFirstValue(ClaimTypes.NameIdentifier), this.User.IsInRole(UserRolesConst.SuperAdmin), int.Parse(pageRouteId), approvalId: approvalIdInt);
}
<div>
    <h4><a asp-controller="StaticPageRoute" asp-action="Index">Static Page</a> > Page Ministry</h4>
</div>



@if (bEUsersPrivilegesViewModel.CanApprove && bEUsersPrivilegesViewModel.IsFromApprovalPage)
{
    <a asp-action="Approve" asp-route-approvalId="@ViewBag.approvalId" asp-route-pageRouteId="@ViewBag.pageRouteId" type="button" class="btn btn-primary" onclick="DisableAfterClick(event,this)">Approve</a>
    <a asp-action="Ignore" asp-route-approvalId="@ViewBag.approvalId" asp-route-pageRouteId="@ViewBag.pageRouteId" type="button" class="btn btn-primary" onclick="DisableAfterClick(event,this)">Ignore</a>
}
else if (bEUsersPrivilegesViewModel.CanSubmit && !bEUsersPrivilegesViewModel.IsFromApprovalPage)
{
    <a type="button" class="btn btn-success" asp-route-pageRouteId="@ViewBag.pageRouteId" asp-controller="PageMinistry" asp-action="SubmitChanges">Submit</a>

}
@*<a asp-controller="PageMinistry" asp-action="Create" asp-route-pageRouteVersionId="@Model.PageRouteVersionId" type="button" class="btn btn-primary index-create-button">Create New Content</a>*@
<table id="data_table" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th style="width: 16%">Arabic Name</th>
            <th style="width: 16%">English Name</th>
            <th style="width: 26%">Arabic Content</th>
            <th style="width: 26%">English Content</th>
            <th style="width: 4%">Active</th>
            @*<th style="width: 4%">Deleted</th>*@
            <th style="width: 4%"></th>
            <th style="width: 4%"></th>
        </tr>
    </thead>
</table>

<table>
    <tr>
        <td class="btn-mais-info text-primary">
            <br />
            <p>
                <strong><a asp-controller="StaticPageRoute" asp-action="Index">Back to previous page</a></strong>
            </p>
        </td>
    </tr>
</table>




@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

        $('#data_table')
            .DataTable({
             //"paging":false,
             //"ordering": false,
             //"info": false,
             //"searching": false,
            "ajax": { "url": '@Url.Action("GetPageMinistry", "PageMinistry", new { pageRouteId =ViewBag.PageRouteId })', "dataSrc": "data" },
                "columns": [
                { "data": "arName",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "enName",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "arContent",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "enContent",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "isActive" },
                //{ "data": "isDeleted" },
                {
                    "data": "pageMinistryId", "orderable": false, "render": function (data, type, row) {
                        var details = '@Url.Action("Details", "PageMinistry")';
                          var PageRouteId = '@ViewBag.PageRouteId';
                        return '<a href="' + details + '/' + data + '?pageRouteId=' + PageRouteId + '&approvalId=' + @ViewBag.approvalId + '" title="Details" class="anchorActionLink"><i class="fa fa-eye"></i></a>';
                    }
                },
                {
                    "data": "pageMinistryId", "orderable": false, "render": function (data, type, row) {
                        var edit = '@Url.Action("Edit", "PageMinistry")';

                         var isConentManager = '@(bEUsersPrivilegesViewModel.CanEdit && !bEUsersPrivilegesViewModel.IsFromApprovalPage)';
                        var PageRouteId = '@ViewBag.PageRouteId';
                        return  isConentManager=="True" ? '<a href="' + edit + '/' + data + '?pageRouteId=' + PageRouteId + '" title="Edit" class="anchorActionLink"><i class="fa fa-pencil"></i></a>':''

                    }
                },
                //{
                //    "data": "id", "orderable": false, "render": function (data, type, row) {
                //        return '<a href="#" title="Delete" data-placement="right" id="deleteItem" class="deleteItem anchorActionLink" data-target="#basic" data-toggle="modal" data-id="' + data + '"><i class="fa fa-trash"></i></a>' +
                //            '<div class="modal fade" id="basic" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">' +
                //            '<div class="modal-dialog">' + '<div class="modal-content">' + '<div class="modal-header">' +
                //            '<h4 class="modal-title">Delete Confirmation</h4>' +
                //            '</div>' + '<div class="modal-body">Are you sure you want to delete?</div><div class="modal-footer"><button id="btnContinueDelete" type="button" class="btn btn-danger">Delete</button><button data-dismiss="modal" type="button" class="btn btn-primary">Cancel</button></div>' +
                //            '</div></div></div>';
                //    }
                //}
                ]
                ,"fnInitComplete": function (oSettings, json) {
                    var table = $('#data_table').DataTable();
                    if (table.data().count() <= 10) {
                       document.getElementById("data_table_paginate").style.display = "none";
                            document.getElementById("data_table_length").style.display = "none";
                            document.getElementById("data_table_filter").style.display = "none";
                    }

                }
        });
    });



    var item_to_delete;
    $('#data_table').on('click', '.deleteItem', function () {
        item_to_delete = $(this).data('id');
    });





        $('#data_table').on('click', '#btnContinueDelete', function () {
            var currentItem = $(this);
            if (currentItem.prop("disabled")) {
                e.preventDefault();
                return;
            }
            currentItem.prop("disabled", true)
        $.ajax({
            type: "POST",
            url: '@Url.Action("Delete", "PageMinistry")',
            data: { id: item_to_delete },
            success: function () {
                window.location.reload();
            },
                complete: function (data) {
                $('#basic').modal('hide');
            }
        });
    });
    </script>
}