@using MPMAR.Common

@model int
@{
    ViewBag.Title = "Sections";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    string approvalId = Context.Request.Query["approvalId"];
    string pageRouteVersionId = Context.Request.Query["pageRouteVersionId"];
    int approvalIdInt = 0;
    int.TryParse(approvalId, out approvalIdInt);

    var bEUsersPrivilegesViewModel = bEUsersPrivilegesService.ValidateIBEUsersPrivilegesViewService(PrivilegesPageType.DynamicPage, this.User.FindFirstValue(ClaimTypes.NameIdentifier), this.User.IsInRole(UserRolesConst.SuperAdmin), int.Parse(pageRouteVersionId), approvalId: approvalIdInt);

     var bEUsersPrivilegesViewModelGlobal = bEUsersPrivilegesService.ValidateIBEUsersPrivilegesViewService(PrivilegesPageType.DynamicPage, this.User.FindFirstValue(ClaimTypes.NameIdentifier), this.User.IsInRole(UserRolesConst.SuperAdmin), approvalId: approvalIdInt);
}
<div>
    <h4><a asp-controller="DynamicPageRoute" asp-action="Index">Dynamic Page</a> > @(ViewBag.DynamicPageName) > Sections</h4>
</div>


@if (bEUsersPrivilegesViewModelGlobal.CanApprove && bEUsersPrivilegesViewModelGlobal.IsFromApprovalPage)
{
    <a asp-action="Approve" asp-route-id="@Model" asp-route-approvalId="@ViewBag.approvalId" type="button" class="btn btn-primary" onclick="DisableAfterClick(event,this)">Approve</a>
    <a asp-action="Ignore" asp-route-id="@Model" asp-route-approvalId="@ViewBag.approvalId" type="button" class="btn btn-primary" onclick="DisableAfterClick(event,this)">Ignore</a>
}
else if (bEUsersPrivilegesViewModel.CanAdd && !bEUsersPrivilegesViewModel.IsFromApprovalPage)
{

    <a asp-controller="DynamicPageSection" asp-action="Create" asp-route-pageRouteVersionId="@Model" type="button" class="btn btn-primary index-create-button">Create New Section</a>

}
<table id="data_table" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th style="width: 16%">Type</th>
            <th style="width: 16%">English Title</th>
            <th style="width: 32%">English Description</th>
            <th style="width: 8%">Active</th>
            @*<th style="width: 8%">Deleted</th>*@
            <th style="width: 4%"></th>
            <th style="width: 4%"></th>
            <th style="width: 4%"></th>
            <th style="width: 8%"></th>
        </tr>
    </thead>
</table>

<table>
    <tr>
        <td class="btn-mais-info text-primary">
            <br />
            <p>
                @if (bEUsersPrivilegesViewModel.IsFromApprovalPage)
                {
                    <strong><a asp-controller="ApprovalNotifications" asp-action="Index">Back to previous page</a></strong>
                }
                else
                {
                    <strong><a asp-controller="DynamicPageRoute" asp-action="Index">Back to previous page</a></strong>
                }
            </p>
        </td>
    </tr>
</table>

@section scripts {
    <script type="text/javascript">
    $(document).ready(function () {
        $('#data_table')
            .DataTable({
            "ajax": { "url": '@Url.Action("GetPageSections", "DynamicPageSection", new { pageRouteVersionId = Model})', "dataSrc": "data" },
                "columns": [
                { "data": "sectionType",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "sectionTitle",render:  $.fn.dataTable.render.ellipsis() },
                { "data": "sectionDescription" ,render:  $.fn.dataTable.render.ellipsis()},
                { "data": "isActive" },
                {
                    "data": "id", "orderable": false, "render": function (data, type, row) {
                        var details = '@Url.Action("Details", "DynamicPageSection")';
                        return '<a href="' + details + '?id=' + data + '&pageRouteVersionId=' + row.pageRouteVersionId+'&approvalId=' + @ViewBag.approvalId +'" title="Details" class="anchorActionLink"><i class="fa fa-eye"></i></a>';
                    }
                    },

                {
                    "data": "id", 'visible': @(this.User.IsInRole(UserRolesConst.ApprovalUser)?"false":"true"), "orderable": false, "render": function (data, type, row) {
                        var edit = '@Url.Action("Edit", "DynamicPageSection")';
                          var isConentManager = '@(bEUsersPrivilegesViewModel.CanEdit && !bEUsersPrivilegesViewModel.IsFromApprovalPage)';
                        return isConentManager  == "True" ?  '<a href="' + edit + '?id=' + data + '&pageRouteVersionId=' + row.pageRouteVersionId+'" title="Edit" class="anchorActionLink"><i class="fa fa-pencil"></i></a>':'';
                    }
                },
                {
                    "data": "id", 'visible': @(this.User.IsInRole(UserRolesConst.ApprovalUser)?"false":"true"), "orderable": false, "render": function (data, type, row) {
                           var isConentManager = '@(bEUsersPrivilegesViewModel.CanDelete && !bEUsersPrivilegesViewModel.IsFromApprovalPage)';
                        return  isConentManager  == "True" ?  '<a href="#" title="Delete" data-placement="right" id="deleteItem" class="deleteItem anchorActionLink" data-target="#basic" data-toggle="modal" data-id="' + data + '" data-pageRouteVersionId="' + row.pageRouteVersionId+'"><i class="fa fa-trash"></i></a>' +
                            '<div class="modal fade" id="basic" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">' +
                            '<div class="modal-dialog">' + '<div class="modal-content">' + '<div class="modal-header">' +
                            '<h4 class="modal-title">Delete Confirmation</h4>' +
                            '</div>' + '<div class="modal-body">Are you sure you want to delete?</div>' + ('@ViewBag.DisableEditFlage' == 'True' ?'<span class="text-warning">NOTE! your old changes do not approved yet, and your new changes will be auto submitted.</span>':'')+'<div class="modal-footer"><button id="btnContinueDelete" type="button" class="btn btn-danger">Delete</button><button data-dismiss="modal" type="button" class="btn btn-primary">Cancel</button></div>' +
                            '</div></div></div>':'';
                    }
                },
                {
                    "data": "id", "orderable": false, "render": function (data, type, row) {
                        var hasCards = row.hasCards;
                        var manageCards = '@Url.Action("Index", "DynamicSectionCard")';
                        return (hasCards) ? '<a class="customActionLink" href="' + manageCards + '?id=' + data + '&pageRouteVersionId=' + row.pageRouteVersionId +
                            '&approvalId=' + @(ViewBag.approvalId) +'" title="Manage Sections">Cards</i></a>' : '';
                    }
                }
                ]
                ,"fnInitComplete": function (oSettings, json) {
                    var table = $('#data_table').DataTable();
                    if (table.data().count() <= 10) {
                       document.getElementById("data_table_paginate").style.display = "none";
                            document.getElementById("data_table_length").style.display = "none";
                            document.getElementById("data_table_filter").style.display = "none";
                    }

                }
        });
    });



        var item_to_delete;
        var verId;
        $('#data_table').on('click', '.deleteItem', function () {
        item_to_delete = $(this).data('id');
            verId = $(this).data('pagerouteversionid');
    });

        $('#data_table').on('click', '#btnContinueDelete', function () {
            var currentItem = $(this);
            if (currentItem.prop("disabled")) {
                e.preventDefault();
                return;
            }
            currentItem.prop("disabled", true)
        $.ajax({
            type: "POST",
            url: '@Url.Action("Delete", "DynamicPageSection")',
            data: { id: item_to_delete, pageRouteVersionId: verId },
            success: function () {
                window.location.reload();
            },
                complete: function (data) {
                $('#basic').modal('hide');
            }
        });
    });
    </script>
}